input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            // goverter:context ctxI
            // goverter:context ctxS
            Convert(source Input, ctxI int, ctxS string) Output
            // goverter:context ctxI
            Convert2(source Input, ctxI int) Output
        }

        type Input struct {
            ID int
            Age int
        }
        type Output struct {
            ID int
            Age string
        }
error: |-
    Overlapping signatures found. All sources and contexts of this method
        func (github.com/jmattheis/goverter/execution.Converter).Convert2(source github.com/jmattheis/goverter/execution.Input, ctxI int) github.com/jmattheis/goverter/execution.Output
            [source] github.com/jmattheis/goverter/execution.Input
            [context] int
            [target] github.com/jmattheis/goverter/execution.Output

    are contained in method
        func (github.com/jmattheis/goverter/execution.Converter).Convert(source github.com/jmattheis/goverter/execution.Input, ctxI int, ctxS string) github.com/jmattheis/goverter/execution.Output
            [source] github.com/jmattheis/goverter/execution.Input
            [context] int
            [context] string
            [target] github.com/jmattheis/goverter/execution.Output

    Goverter doesn't know which method to use when all contexts of the second method are available.
    Remove one of the methods to prevent this ambiguity.
