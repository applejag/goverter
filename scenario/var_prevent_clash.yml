input:
    input.go: |
        package example

        // goverter:variables
        var (
            ConvertX func([]Input) []Output
        )

        // goverter:variables
        var (
            ConvertY func([]Input) []Output
        )

        type Input struct {
            Name string
        }
        type Output struct {
            Name string
        }
success:
    - input.gen.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package example

        func init() {
        	ConvertX = func(source []Input) []Output {
        		var exampleOutputList []Output
        		if source != nil {
        			exampleOutputList = make([]Output, len(source))
        			for i := 0; i < len(source); i++ {
        				exampleOutputList[i] = exampleInputToExampleOutput(source[i])
        			}
        		}
        		return exampleOutputList
        	}
        }
        func exampleInputToExampleOutput(source Input) Output {
        	var exampleOutput Output
        	exampleOutput.Name = source.Name
        	return exampleOutput
        }
        func init() {
        	ConvertY = func(source []Input) []Output {
        		var exampleOutputList []Output
        		if source != nil {
        			exampleOutputList = make([]Output, len(source))
        			for i := 0; i < len(source); i++ {
        				exampleOutputList[i] = exampleInputToExampleOutput2(source[i])
        			}
        		}
        		return exampleOutputList
        	}
        }
        func exampleInputToExampleOutput2(source Input) Output {
        	var exampleOutput Output
        	exampleOutput.Name = source.Name
        	return exampleOutput
        }
