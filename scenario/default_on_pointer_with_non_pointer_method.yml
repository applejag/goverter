input:
    input.go: |
        package execution

        // goverter:converter
        type Converter interface {
            // goverter:default NewOutput
            Convert(source *Input) (*Output)
        }

        type Input struct {
            Name       string
        }
        type Output struct {
            Name       string
        }

        func NewOutput() Output {
            return Output{Name: "string"}
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/jmattheis/goverter/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source *execution.Input) *execution.Output {
        	pExecutionOutputVal := execution.NewOutput()
        	pExecutionOutput := &pExecutionOutputVal
        	if source != nil {
        		var executionOutput execution.Output
        		executionOutput.Name = (*source).Name
        		pExecutionOutput = &executionOutput
        	}
        	return pExecutionOutput
        }
